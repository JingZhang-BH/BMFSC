import numpy as np
import pickle
KSC = [155,20,76,0,47,62,18 ,31 , 90, 139 , 45 , 96 , 60 , 52 , 42 , 32  ,27 ,106,
  36 ,126 ,134  ,75  ,83 ,118 ,161  ,72 ,103  ,48  ,92  ,37 ,104 ,121 ,142 ,169 ,137  ,89,
 162 ,156,  81  ,57  ,26 ,168  ,86 ,109  ,70 ,165 ,130 ,123 ,43   ,2, 166   ,4 ,115 ,122,
133,  11  ,54  ,82   ,9 ,102  ,53 ,175 ,111 ,167 ,108  ,85  ,35  ,99  ,64  ,12  ,40  ,63,
 117 ,113 ,100  ,98  ,71  ,69  ,97  ,61  ,51  ,73  ,50 ,170 ,146  ,22  ,95 ,107   ,3 ,120,
  15 ,114 ,125 ,124 ,144  ,16 ,132 ,173 ,143  ,84]
KSC = np.array(KSC).astype(np.int16)

Botswana = [29 , 24 ,140  ,94 ,108 ,141 ,101  ,71 ,123  ,23 ,111 ,130  ,47,  69  ,19   ,8 ,110  ,98,
 107  ,78  ,83  ,15  ,86  ,62  ,27 ,118 ,102  ,93   ,9  ,56  ,49 ,129  ,30  ,33  ,42  ,31,
  41 ,109 ,143  ,85 ,137  ,60  ,35  ,44  ,36 ,113 ,112 ,122 ,138  ,64  ,51 ,132  ,59  ,88,
  12  ,99 ,124  ,96 ,106  ,48  ,67  ,66  ,82 ,104  ,54  ,92  ,38  ,84 ,116  ,90  ,95  ,14,
  81  ,70  ,75  ,91 ,128  ,79  ,34  ,17  ,55  ,11  ,10 ,133   ,4   ,3  ,45 ,127  ,58 ,139,
 121 ,114   ,2 ,103 ,136  ,57  ,40  ,74   ,1  ,76]
Botswana =  np.array(Botswana).astype(np.int16)

Chikusei = [108  ,64  ,63  ,55  ,95  ,56 ,113 ,122  ,92  ,99  ,84  ,88 ,106  ,27  ,57  ,36  ,17  ,31,
  67 ,118  ,35 ,124  ,68  ,30 ,104  ,80 ,100   ,3 ,123 ,120  ,44  ,10  ,54   ,5  ,83   ,6,
 112   ,0  ,20 ,109  ,12  ,62   ,7  ,76  ,47  ,90  ,21  ,58  ,34 ,117  ,46  ,25  ,86 ,116,
 125 ,111  ,81  ,42  ,59   ,8  ,28 ,126  ,29  ,19  ,15  ,43  ,60  ,61  ,98  ,85   ,2  ,26,
  13  ,79  ,40  ,33  ,96  ,32  ,51 ,115  ,23  ,93 ,101  ,77 ,121  ,69  ,49   ,1  ,50  ,78,
  66  ,53  ,38  ,82  ,37  ,75   ,9  ,18  ,24  ,74]  ##SVM
Chikusei =  np.array(Chikusei).astype(np.int16)

Salinas_100 = [ 6, 4 ,176  ,96 ,107  ,24 ,123  ,50 ,111 ,160 ,150  ,32 ,182, 196 ,138  ,39 ,135  ,51,
 166  ,34 ,174 ,144  ,95 ,179 ,191 ,125 ,162  ,90 ,168,  57 ,143  ,80  ,28 ,119 ,164 ,157,
 199   ,9 ,198   ,5  ,75 ,102  ,40 ,165  ,69 ,109 ,155 ,148  ,87  ,92 ,197 ,200  ,88  ,68,
  31  ,54 ,137  ,16 ,183 ,118  ,64  ,52 ,116  ,70  ,46 ,132  ,19 ,142  ,65  ,37  ,33 ,112,
 147 ,133  ,79 ,184 ,126 ,104 ,189  ,18  ,71 ,190 ,141  ,55 ,193  ,77 ,124  ,29 ,170 ,178,
 115  ,53 ,131  ,99  ,36 ,140  ,15 ,152 ,106  ,45]   ##100更高
Salinas_100 =  np.array(Salinas_100).astype(np.int16)

Salinas_200 = [6  ,4 ,176  ,96 ,107  ,24 ,123  ,50 ,111 ,160 ,150  ,32 ,182 ,196 ,138  ,39 ,135  ,51,
 166  ,34 ,174 ,144  ,95 ,179 ,191 ,125 ,162  ,90 ,168  ,57 ,143  ,80  ,28 ,119 ,164 ,157,
 199   ,9 ,198   ,5  ,75 ,102  ,40 ,165  ,69 ,109 ,155 ,148  ,87  ,92 ,197 ,200  ,88  ,68,
  31  ,54 ,137  ,16 ,183 ,118  ,64  ,52 ,116  ,70  ,46 ,132  ,19 ,142  ,65  ,37  ,33 ,112,
 147 ,133  ,79 ,184 ,126 ,104 ,189  ,18  ,71 ,190 ,141  ,55 ,193  ,77 ,124  ,29 ,170 ,178,
 115  ,53 ,131  ,99  ,36 ,140  ,15 ,152 ,106  ,45 ,139 ,195  ,93  ,26  ,72  ,14 ,163   ,3,
 128 ,202  ,22  ,41  ,13 ,110  ,74  ,20 ,113 ,153 ,173  ,35  ,49  ,73   ,0  ,85 ,120 ,181,
  76 ,156 ,105 ,100  ,56 ,134   ,1  ,12  ,38  ,48 ,159  ,91  ,27  ,98 ,161  ,11 ,127  ,86,
 167  ,60  ,25 ,117  ,59 ,101 ,146 ,114 ,172  ,23 ,103 ,136 ,187  ,62  ,89  ,63  ,21 ,121,
  43 ,171 ,180 ,151  ,61  ,10   ,7 ,188 ,185 ,108  ,44  ,83  ,58 ,186 ,158 ,130 ,192  ,17,
 129  ,84  ,78  ,94  ,66  ,30 ,145  ,97 ,149 ,154 ,203  ,67 ,175   ,8  ,42  ,82 ,177 ,169,
  81 ,122]
Salinas_200 =  np.array(Salinas_200).astype(np.int16)

PaviaU = [82 ,29  ,33  ,37  ,20  ,98  ,53  ,26  ,15   ,4  ,74   ,0  ,34  ,47  ,92  ,99  ,36  ,12,
  79  ,58  ,13   ,2  ,91  ,67  ,18  ,30  ,50  ,96  ,46 ,101  ,21  ,93,  62  ,73  ,61  ,84,
  56  ,94   ,9  ,95  ,89  ,75  ,38   ,8  ,59  ,69  ,10  ,16  ,76  ,57  ,31  ,54  ,88   ,3,
  43  ,24 ,102  ,39  ,87  ,19  ,68  ,44  ,17   ,5  ,25  ,28  ,35  ,45  ,80  ,48  ,49  ,65,
  77  ,72  ,83  ,27  ,78   ,7 ,100  ,51  ,97  ,90  ,85  ,42   ,6  ,55  ,41  ,70  ,14  ,63,
  11  ,60  ,71  ,32  ,52  ,66  ,22   ,1  ,81  ,86]
PaviaU =  np.array(PaviaU).astype(np.int16)

Pavia = [81   ,6  ,60  ,28  ,29   ,5  ,85  ,75  ,97  ,43  ,48  ,68  ,90  ,39  ,95   ,8  ,33  ,76,
  94  ,35  ,71  ,53   ,3  ,21  ,87  ,40  ,98  ,69  ,56  ,14  ,51  ,96  ,72  ,70  ,41  ,15,
  26   ,9  ,16  ,78  ,63  ,74  ,30  ,92  ,52   ,4 ,100  ,46  ,77  ,88  ,64  ,23  ,79  ,47,
  32  ,50  ,86  ,34  ,61  ,57  ,58  ,45  ,24  ,59   ,1  ,17  ,80  ,55  ,38   ,0  ,19  ,73,
  25  ,54  ,49 , 99  ,44  ,82   ,2  ,42  ,65  ,66  ,31  ,89  ,93  ,27   ,7  ,10 ,101  ,13,
  84  ,18  ,62  ,83  ,20  ,37  ,67  ,22  ,11  ,36]
Pavia =  np.array(Pavia).astype(np.int16)

IN = [108  ,68  ,36 ,112  ,56  ,85  ,37 ,198  ,76 ,178 ,103 ,101 ,191 ,154  ,60  ,71 ,177 ,195,
 175 ,158  ,66 ,104 ,163 ,114 ,193  ,74  ,39 ,171 ,173  ,32  ,30 ,197  ,65  ,91   ,2  ,43,
  99  ,20  ,45 ,179  ,18 ,132 ,134 ,136 ,143 ,180  ,78  ,44 ,184 ,116 ,139 ,122  ,93 ,149,
  35 ,165 ,109  ,42 ,161   ,3  ,50 ,120 ,164 ,151 ,174 ,152 ,194  ,24  ,26 ,144 ,199 ,185,
  53 ,187  ,90  ,72  ,31  ,82  ,38  ,98  ,97  ,40 ,188  ,19 ,142  ,67 ,159  ,70  ,17  ,57,
  64  ,29  ,79  ,80  ,25   ,8  ,14  ,28  ,61 ,105]
IN =  np.array(IN).astype(np.int16)

IN_200 = [108  ,68  ,36 ,112  ,56  ,85  ,37 ,198  ,76 ,178 ,103 ,101 ,191 ,154  ,60  ,71 ,177 ,195,
 175 ,158  ,66 ,104 ,163 ,114 ,193  ,74  ,39 ,171 ,173  ,32  ,30 ,197  ,65  ,91   ,2  ,43,
  99  ,20  ,45 ,179  ,18 ,132 ,134 ,136 ,143 ,180  ,78  ,44 ,184 ,116 ,139 ,122  ,93 ,149,
  35 ,165 ,109  ,42 ,161   ,3  ,50 ,120 ,164 ,151 ,174 ,152 ,194  ,24  ,26 ,144 ,199 ,185,
  53 ,187  ,90  ,72  ,31  ,82  ,38  ,98  ,97  ,40 ,188  ,19 ,142  ,67 ,159  ,70  ,17  ,57,
  64  ,29  ,79  ,80  ,25   ,8  ,14  ,28  ,61 ,105  ,48  ,11  ,86 ,117   ,7 ,100   ,5   ,0,
 133 ,102  ,62 ,137 ,190 ,160   ,4  ,87 ,166  ,95 ,140  ,10  ,77  ,55 ,121  ,75 ,172  ,27,
  73 ,147  ,69 ,118 ,156 ,170  ,34 ,186 ,131  ,54 ,157  ,21  ,92  ,59 ,153 ,176 ,128  ,63,
  16 ,167 ,168  ,47 ,123 ,115 ,189  ,89 ,135 ,130  ,88 ,146   ,1   ,6  ,15  ,52 ,126 ,148,
 155 ,127 ,141 ,113  ,22 ,129 ,169 ,125  ,49 ,138 ,124 ,119 ,192 ,196   ,9 ,106  ,33 ,110,
  51  ,13 ,181  ,58  ,81  ,12 ,145  ,94  ,46 ,183  ,83  ,23 ,182 ,111 ,107  ,96  ,84 ,162,
 150  ,41]   #IN_200适用于KNN，          IN_100适用于SVM
IN_200 =  np.array(IN_200).astype(np.int16)

Pavia_50 = [41, 85, 37, 50, 96, 75, 35, 28, 11, 77, 83, 43, 70, 66, 53,67,68, 78, 95, 49, 24, 72 ,88, 82,
 23, 97, 79, 30, 93, 48, 71, 69, 94, 54, 22, 64,  3,  7, 80, 73, 46, 81, 76, 65 ,38 ,32, 86, 40, 60, 52]
PaviaU_50 = [11 , 72 , 59 , 74 , 73 , 93  ,23,  56 , 41 , 51 ,47 , 67 ,  7 , 82 , 94 , 55  ,95 , 91,
  25 , 96 , 60 ,  6 , 54,  57 , 81  ,98  ,24 , 75  ,48 , 31 ,64  ,29 , 21 , 76 , 45  ,33,
  36 ,102 , 83 , 66 , 16 , 27 , 43 , 34 , 92 , 85 , 37 , 79 , 35 , 61]

Houston_100 = [39,  85  ,67 , 50, 135 , 42 , 92 , 12 , 69 , 68 ,132 , 38, 117  ,63, 137  ,48 , 66 , 71,
  28, 140 , 78 , 34  , 2 , 76, 106 ,104 , 22 , 74 , 31  , 9 , 58 , 79 ,  5 , 77 , 49 , 97,
  60 , 73 ,112 ,90  ,41 ,120 , 14  , 6 ,124 , 62 , 37 , 46 , 84 , 88  ,24, 108 , 89 , 15,
  94 , 17 , 13 ,139, 102 , 30  ,16 , 36,  53 ,143, 100 , 29 ,126,  45,   8 ,  4 ,141 ,130,
  59, 131 , 54 , 18,  61,  11 , 80 , 47 , 21 , 55 , 70, 113,   7 ,118 , 51,  75,  35 ,119,
  91 ,115 ,111  ,87 , 56 , 43  ,96,  27 ,129 , 86]


Chikusei.sort()
KSC.sort()
Botswana.sort()
Houston_100.sort()
Salinas_100.sort()
PaviaU.sort()
Pavia.sort()
IN.sort()
band_selected = {"C":Chikusei, 'K':KSC, 'B':Botswana, 'H':Houston_100, 'S':Salinas_100, 'PU':PaviaU,
                 'PC':Pavia, 'I':IN}
pickle.dump(band_selected, open('./data/bands.pickle', 'wb'), protocol=2)
